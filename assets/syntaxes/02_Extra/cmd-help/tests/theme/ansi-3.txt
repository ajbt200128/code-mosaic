[34musage:[0m /home/victor-gp/.pyenv/versions/3.10.0/bin/python [option] ... [-c cmd | -m mod | file | -] [arg] ...
Options and arguments (and corresponding environment variables):
[34m-b[0m     : issue warnings about str(bytes_instance), str(bytearray_instance)
         and comparing bytes/bytearray with str. (-bb: issue errors)
[34m-B[0m     : don't write .pyc files on import; also PYTHONDONTWRITEBYTECODE=x
[34m-c[0m [32mcmd[0m : program passed in as string (terminates option list)
[34m-d[0m     : turn on parser debugging output (for experts only, only works on
         debug builds); also PYTHONDEBUG=x
[34m-E[0m     : ignore PYTHON* environment variables (such as PYTHONPATH)
[34m-h[0m     : print this help message and exit (also --help)
[34m-i[0m     : inspect interactively after running script; forces a prompt even
         if stdin does not appear to be a terminal; also PYTHONINSPECT=x
[34m-I[0m     : isolate Python from the user's environment (implies -E and -s)
[34m-m[0m [32mmod[0m : run library module as a script (terminates option list)
[34m-O[0m     : remove assert and __debug__-dependent statements; add .opt-1 before
         .pyc extension; also PYTHONOPTIMIZE=x
[34m-OO[0m    : do -O changes and also discard docstrings; add .opt-2 before
         .pyc extension
[34m-q[0m     : don't print version and copyright messages on interactive startup
[34m-s[0m     : don't add user site directory to sys.path; also PYTHONNOUSERSITE
[34m-S[0m     : don't imply 'import site' on initialization
[34m-u[0m     : force the stdout and stderr streams to be unbuffered;
         this option has no effect on stdin; also PYTHONUNBUFFERED=x
[34m-v[0m     : verbose (trace import statements); also PYTHONVERBOSE=x
         can be supplied multiple times to increase verbosity
[34m-V[0m     : print the Python version number and exit (also --version)
         when given twice, print more information about the build
[34m-W[0m [32marg[0m : warning control; arg is action:message:category:module:lineno
         also PYTHONWARNINGS=arg
[34m-x[0m     : skip first line of source, allowing use of non-Unix forms of #!cmd
[34m-X[0m [32mopt[0m : set implementation-specific option. The following options are available:

         -X faulthandler: enable faulthandler
         -X showrefcount: output the total reference count and number of used
             memory blocks when the program finishes or after each statement in the
             interactive interpreter. This only works on debug builds
         -X tracemalloc: start tracing Python memory allocations using the
             tracemalloc module. By default, only the most recent frame is stored in a
             traceback of a trace. Use -X tracemalloc=NFRAME to start tracing with a
             traceback limit of NFRAME frames
         -X importtime: show how long each import takes. It shows module name,
             cumulative time (including nested imports) and self time (excluding
             nested imports). Note that its output may be broken in multi-threaded
             application. Typical usage is python3 -X importtime -c 'import asyncio'
         -X dev: enable CPython's "development mode", introducing additional runtime
             checks which are too expensive to be enabled by default. Effect of the
             developer mode:
                * Add default warning filter, as -W default
                * Install debug hooks on memory allocators: see the PyMem_SetupDebugHooks() C function
                * Enable the faulthandler module to dump the Python traceback on a crash
                * Enable asyncio debug mode
                * Set the dev_mode attribute of sys.flags to True
                * io.IOBase destructor logs close() exceptions
         -X utf8: enable UTF-8 mode for operating system interfaces, overriding the default
             locale-aware mode. -X utf8=0 explicitly disables UTF-8 mode (even when it would
             otherwise activate automatically)
         -X pycache_prefix=PATH: enable writing .pyc files to a parallel tree rooted at the
             given directory instead of to the code tree
         -X warn_default_encoding: enable opt-in EncodingWarning for 'encoding=None'

[34m--check-hash-based-pycs[0m [32malways[0m|[32mdefault[0m|[32mnever[0m:
    control how Python invalidates hash-based .pyc files
[35mfile[0m   : program read from script file
[32m-[0m      : program read from stdin (default; interactive mode if a tty)
[32marg[0m [32m...[0m: arguments passed to program in sys.argv[1:]

[34mOther environment variables:[0m
[32mPYTHONSTARTUP[0m: file executed on interactive startup (no default)
[32mPYTHONPATH[0m   : ':'-separated list of directories prefixed to the
               default module search path.  The result is sys.path.
[32mPYTHONHOME[0m   : alternate <prefix> directory (or <prefix>:<exec_prefix>).
               The default module search path uses <prefix>/lib/pythonX.X.
[32mPYTHONPLATLIBDIR[0m : override sys.platlibdir.
[32mPYTHONCASEOK[0m : ignore case in 'import' statements (Windows).
[32mPYTHONUTF8[0m: if set to 1, enable the UTF-8 mode.
[32mPYTHONIOENCODING[0m: Encoding[:errors] used for stdin/stdout/stderr.
[32mPYTHONFAULTHANDLER[0m: dump the Python traceback on fatal errors.
[32mPYTHONHASHSEED[0m: if this variable is set to 'random', a random value is used
   to seed the hashes of str and bytes objects.  It can also be set to an
   integer in the range [0,4294967295] to get hash values with a
   predictable seed.
[32mPYTHONMALLOC[0m: set the Python memory allocators and/or install debug hooks
   on Python memory allocators. Use PYTHONMALLOC=debug to install debug
   hooks.
[32mPYTHONCOERCECLOCALE[0m: if this variable is set to 0, it disables the locale
   coercion behavior. Use PYTHONCOERCECLOCALE=warn to request display of
   locale coercion and locale compatibility warnings on stderr.
[32mPYTHONBREAKPOINT[0m: if this variable is set to 0, it disables the default
   debugger. It can be set to the callable of your debugger of choice.
[32mPYTHONDEVMODE[0m: enable the development mode.
[32mPYTHONPYCACHEPREFIX[0m: root directory for bytecode cache (pyc) files.
[32mPYTHONWARNDEFAULTENCODING[0m: enable opt-in EncodingWarning for 'encoding=None'.
